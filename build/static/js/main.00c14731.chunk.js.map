{"version":3,"sources":["FetchRandomUser.js","App.js","reportWebVitals.js","index.js"],"names":["FetchRandomUser","state","loading","person","a","fetch","response","json","data","this","setState","results","name","title","first","last","src","picture","large","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QACqBA,E,4MAEjBC,MAAQ,CACJC,SAAQ,EACRC,OAAQ,M,8FAIZ,8BAAAC,EAAA,4DACgB,4BADhB,SAE4BC,MADZ,6BADhB,cAEUC,EAFV,gBAGuBA,EAASC,OAHhC,OAGUC,EAHV,OAIIC,KAAKC,SAAS,CAACP,OAAQK,EAAKG,QAAQ,GAAIT,SAAS,IAJrD,gD,0EAQA,WACI,OAAQ,8BACHO,KAAKR,MAAMC,UAAYO,KAAKR,MAAME,OAC/B,6CAEA,gCACI,8BAAMM,KAAKR,MAAME,OAAOS,KAAKC,QAC7B,8BAAMJ,KAAKR,MAAME,OAAOS,KAAKE,QAC7B,8BAAML,KAAKR,MAAME,OAAOS,KAAKG,OAC7B,qBAAKC,IAAKP,KAAKR,MAAME,OAAOc,QAAQC,iB,GAzBXC,IAAMC,WCapCC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00c14731.chunk.js","sourcesContent":["import React from \"react\"\nexport default class FetchRandomUser extends React.Component{\n\n    state = {\n        loading:true,\n        person: null\n    };\n\n\n    async componentDidMount(){\n        const url = \"https://api.randomuser.me\";\n        const response =  await fetch(url);\n        const data = await response.json();\n        this.setState({person: data.results[0], loading: false})\n    }\n\n\n    render(){\n        return (<div>\n            {this.state.loading || !this.state.person ? (\n                <div>loading...</div>\n            ): (\n                <div>\n                    <div>{this.state.person.name.title}</div>\n                    <div>{this.state.person.name.first}</div>\n                    <div>{this.state.person.name.last}</div>\n                    <img src={this.state.person.picture.large}/>\n                </div>\n            )}\n        </div>\n        );\n    }\n}","\nimport './App.css';\nimport FetchRandomUser from \"./FetchRandomUser\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FetchRandomUser/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}