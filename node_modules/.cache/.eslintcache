[{"/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/index.js":"1","/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/App.js":"2","/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/reportWebVitals.js":"3","/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/FetchRandomUser.js":"4"},{"size":500,"mtime":1620077668568,"results":"5","hashOfConfig":"6"},{"size":246,"mtime":1620082899980,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1620077668570,"results":"8","hashOfConfig":"6"},{"size":888,"mtime":1620078814318,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18al06s",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/index.js",[],"/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/App.js",[],"/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/reportWebVitals.js",[],"/Users/stefanovolpatti/Web Development/React/api-request-ben/React-Api/src/FetchRandomUser.js",["19"],"import React from \"react\"\nexport default class FetchRandomUser extends React.Component{\n\n    state = {\n        loading:true,\n        person: null\n    };\n\n\n    async componentDidMount(){\n        const url = \"https://api.randomuser.me\";\n        const response =  await fetch(url);\n        const data = await response.json();\n        this.setState({person: data.results[0], loading: false})\n    }\n\n\n    render(){\n        return (<div>\n            {this.state.loading || !this.state.person ? (\n                <div>loading...</div>\n            ): (\n                <div>\n                    <div>{this.state.person.name.title}</div>\n                    <div>{this.state.person.name.first}</div>\n                    <div>{this.state.person.name.last}</div>\n                    <img src={this.state.person.picture.large}/>\n                </div>\n            )}\n        </div>\n        );\n    }\n}",{"ruleId":"20","severity":1,"message":"21","line":27,"column":21,"nodeType":"22","endLine":27,"endColumn":65},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]